@prefix : <http://www.w3.org/ns/td-validation#> .
@prefix td: <http://www.w3.org/ns/td#> .
@prefix jsonschema: <http://www.w3.org/ns/json-schema#> .
@prefix wotsec: <http://www.w3.org/ns/wot-security#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:ThingShape a sh:NodeShape ;
    sh:targetClass td:Thing ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "1"^^xsd:integer ;
    sh:property [
        sh:path td:name ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:description ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:support ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path td:created ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:lastModified ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:base ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path td:properties ;
        sh:class td:Property ;
    ] ;
    sh:property [
        sh:path td:actions ;
        sh:class td:Action ;
    ] ;
    sh:property [
        sh:path td:events ;
        sh:class td:Event ;
    ] ;
    sh:property [
        sh:path td:links ;
        sh:class td:Link ;
    ] ;
    sh:property [
        sh:path td:security ;
        sh:minCount 1 ;
#       sh:class wotsec:SecurityScheme ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [	
        sh:path td:securityDefinitions ;	
        sh:class wotsec:SecurityScheme ;	
    ] ;
    sh:property [
        sh:path td:version ;
        sh:class td:Versioning ;
    ].
    
:InteractionPatternShape a sh:NodeShape ;
    sh:targetClass td:InteractionPattern ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "2"^^xsd:integer ;
    sh:description
"""
<p>
    <span class="rfc2119-assertion" id="td-unique-identifiers">
        Each instance of a <code>Property</code>, <code>Action</code>,
        and <code>Event</code> class MUST have an identifier that is
        unique within the context of a Thing Description document.
    </span>
    See Section <a href="#json-serializiation-section" class="sec-ref">Representation
    Format</a> for more details about JSON-LD 1.1 identifiers.
</p>
"""^^rdf:HTML ;
    sh:property [
        sh:path td:forms ;
        sh:minCount 1 ;
        sh:class td:Form ;
    ] ;
    sh:property [
        sh:path td:title ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:uriVariables ;
        sh:class td:DataSchema ;
    ] ;
    sh:property [
        sh:path td:description ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:security ;
#       sh:class wotsec:SecurityScheme ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:scopes ;
        sh:datatype xsd:string ;
    ] .

:PropertyShape a sh:NodeShape ;
    sh:targetClass td:Property ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "3"^^xsd:integer ;
    sh:description
"""
<p class="note">
    Property instances are also instances of the class
    <a href="#dataschema" class="sec-ref">DataSchema</a>. Therefore,
    it can contain the <code>type</code>, <code>unit</code>,
    <code>readOnly</code> and <code>writeOnly</code> members, among
    others.
</p>
"""^^rdf:HTML ;
    sh:property [
        sh:path td:observable ;
        sh:datatype xsd:boolean ;
        sh:defaultValue "false"^^xsd:boolean ;
    ] .
    
:ActionShape a sh:NodeShape ;
    sh:targetClass td:Action ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "4"^^xsd:integer ;
    sh:property [
        sh:path td:input ;
        sh:class jsonschema:DataSchema ;
    ] ;
    sh:property [
        sh:path td:output ;
        sh:class jsonschema:DataSchema ;
    ] ;
    sh:property [
        sh:path td:safe ;
        sh:datatype xsd:boolean ;
        sh:minCount 1 ;
        sh:defaultValue "false"^^xsd:boolean ;
    ] ;
    sh:property [
        sh:path td:idempotent ;
        sh:datatype xsd:boolean ;
        sh:minCount 1 ;
        sh:defaultValue "false"^^xsd:boolean ;
    ] .
    
:EventShape a sh:NodeShape ;
    sh:targetClass td:Event ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "5"^^xsd:integer ;
    sh:property [
        sh:path td:subscription ;
        sh:class jsonschema:DataSchema ;
    ] ;
    sh:property [
        sh:path td:data ;
        sh:class jsonschema:DataSchema ;
    ] ;
    sh:property [
        sh:path td:cancellation ;
        sh:class jsonschema:DataSchema ;
    ] .

:FormShape a sh:NodeShape ;
    sh:targetClass td:Form ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "6"^^xsd:integer ;
    sh:property [
        sh:path td:href ;
        sh:minCount 1 ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path td:contentType ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:defaultValue "application/json"^^xsd:string ;
    ] ;
    sh:property [
        sh:path td:response ;
        sh:class td:Response ;
    ] ;
    sh:property [
        sh:path td:op ;
        sh:datatype xsd:string ;
        sh:in (
            "readproperty"
            "writeproperty"
            "observeproperty"
            "invokeaction"
            "subscribeevent"
            "unsubscribeevent"
        )
    ] ;
    sh:property [
        sh:path td:subprotocol ;
        sh:datatype xsd:string ;
        sh:in (
            "longpoll"
        )
    ] ;
    sh:property [
        sh:path td:security ;
#       sh:class wotsec:SecurityScheme ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:scopes ;
        sh:datatype xsd:string ;
    ] .
    
:LinkShape a sh:NodeShape ;
    sh:targetClass td:Link ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "7"^^xsd:integer ;
    sh:property [
        sh:path td:href ;
        sh:minCount 1 ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path td:type ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:rel ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:anchor ;
        sh:datatype xsd:anyURI ;
    ] .

:VersioningShape a sh:NodeShape ;
    sh:targetClass td:Versioning ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "8"^^xsd:integer ;
    sh:property [
        sh:path td:instance ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
    ] .

:ResponseShape a sh:NodeShape ;
    sh:targetClass td:Response ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "9"^^xsd:integer ;
     sh:property [
        sh:path td:contentType ;
        sh:datatype xsd:string ;
    ] .



:SecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:SecurityScheme ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "1"^^xsd:integer ;
    sh:property [
        sh:path wotsec:scheme ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:in (
            "nosec" 
            "basic" 
            "cert" 
            "digest" 
            "bearer" 
            "pop" 
            "psk" 
            "public" 
            "oauth2" 
            "apikey"
        )
    ] ;
    sh:property [
        sh:path td:description ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:proxy ;
        sh:datatype xsd:anyURI ;
    ] .

:NoSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:NoSecurityScheme ;
    sh:order "2"^^xsd:integer .

:BasicSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:BasicSecurityScheme ;
    sh:order "3"^^xsd:integer ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:defaultValue "header"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
    ] .

:DigestSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:DigestSecurityScheme ;
    sh:order "4"^^xsd:integer ;
    sh:property [
        sh:path wotsec:qop ;
        sh:datatype xsd:string ;
        sh:defaultValue "auth"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:defaultValue "header"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
    ] .

:APIKeySecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:APIKeySecurityScheme ;
    sh:order "5"^^xsd:integer ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:defaultValue "query"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
    ] .

:BearerSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:BearerSecurityScheme ;
    sh:order "6"^^xsd:integer ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path wotsec:alg ;
        sh:datatype xsd:string ;
        sh:defaultValue "ES256"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:format ;
        sh:datatype xsd:string ;
        sh:defaultValue "jwt"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:defaultValue "header"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
    ] .

:CertSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:CertSecurityScheme ;
    sh:order "7"^^xsd:integer ;
    sh:property [
        sh:path wotsec:identity ;
        sh:datatype xsd:string ;
    ] .

:PSKSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PSKSecurityScheme ;
    sh:order "8"^^xsd:integer ;
    sh:property [
        sh:path wotsec:identity ;
        sh:datatype xsd:string ;
    ] .

:PublicSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PublicSecurityScheme ;
    sh:order "9"^^xsd:integer ;
    sh:property [
        sh:path wotsec:identity ;
        sh:datatype xsd:string ;
    ] .

:PoPSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PoPSecurityScheme ;
    sh:order "10"^^xsd:integer ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path wotsec:alg ;
        sh:datatype xsd:string ;
        sh:defaultValue "ES256"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:format ;
        sh:datatype xsd:string ;
        sh:defaultValue "jwt"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:defaultValue "header"^^xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
    ] .

:OAuth2SecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:OAuth2SecurityScheme ;
    sh:order "11"^^xsd:integer ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path wotsec:token ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path wotsec:refresh ;
        sh:datatype xsd:anyURI ;
    ] ;
    sh:property [
        sh:path wotsec:scopes ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path wotsec:flow ;
        sh:datatype xsd:string ;
        sh:defaultValue "implicit"^^xsd:string ;
    ] .
    
:DataSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:DataSchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "1"^^xsd:integer ;
    sh:property [
        sh:path td:description ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path td:title ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path jsonschema:type ;
        sh:datatype xsd:string ;
        sh:in (
            "object"
            "array"
            "string"
            "number"
            "integer"
            "boolean"
            "null"
        )
    ] ;
    sh:property [
        sh:path jsonschema:const ;
    ] ;
    sh:property [
        sh:path jsonschema:unit ;
        sh:class jsonschema:DataSchema;
    ] ;
    sh:property [
        sh:path jsonschema:oneOf ;
        sh:class jsonschema:DataSchema;
    ] ;
    sh:property [
        sh:path jsonschema:enum ;
    ] ;
    sh:property [
        sh:path jsonschema:readOnly ;
        sh:datatype xsd:boolean ;
        sh:minCount 1 ;
        sh:defaultValue "false"^^xsd:boolean ;
    ] ;
    sh:property [
        sh:path jsonschema:writeOnly ;
        sh:datatype xsd:boolean ;
        sh:minCount 1 ;
        sh:defaultValue "false"^^xsd:boolean ;
    ] .

:ArraySchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:ArraySchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "2"^^xsd:integer ;
    sh:property [
        sh:path jsonschema:items ;
        sh:class jsonschema:DataSchema ;
    ] ;
    sh:property [
        sh:path jsonschema:minItems ;
        sh:datatype xsd:unsignedInt ;
    ] ;
    sh:property [
        sh:path jsonschema:maxItems ;
        sh:datatype xsd:unsignedInt ;
    ] .
    
:BooleanSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:BooleanSchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "3"^^xsd:integer .
    
:NumberSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:NumberSchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "4"^^xsd:integer ;
    sh:property [
        sh:path jsonschema:minimum ;
        sh:datatype xsd:double ;
    ] ;
    sh:property [
        sh:path jsonschema:maximum ;
        sh:datatype xsd:double ;
    ] .
    
:IntegerSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:IntegerSchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "5"^^xsd:integer ;
    sh:property [
        sh:path jsonschema:minimum ;
        sh:datatype xsd:integer ;
    ] ;
    sh:property [
        sh:path jsonschema:maximum ;
        sh:datatype xsd:integer ;
    ] .
    
:ObjectSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:ObjectSchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "6"^^xsd:integer ;
    sh:property [
        sh:path jsonschema:properties ;
        sh:class jsonschema:DataSchema ;
    ] ;
    sh:property [
        sh:path jsonschema:required ;
        sh:datatype xsd:string ;
    ] .

:StringSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:StringSchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "7"^^xsd:integer .

:NullSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:NullSchema ;
    sh:closed "false"^^xsd:boolean ;
    sh:order "8"^^xsd:integer .